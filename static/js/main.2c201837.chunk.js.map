{"version":3,"sources":["components/ErrorBoundary.jsx","components/Store/index.tsx","components/Menu/menuItems.ts","components/Menu/MenuLink.tsx","components/Menu/MenuParent.tsx","components/Menu/index.tsx","data/settings.ts","classes/User.ts","utils/randomError.ts","components/LoginForm/index.tsx","routes/Home/index.tsx","routes/Secret/index.tsx","components/SignupForm/index.tsx","utils/shuffle.ts","routes/Signup/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","children","React","initialState","user","users","signupAttempts","loginAttempts","usedNames","hasDroppedTable","hasRestoredTable","usersBackup","storeReducer","action","type","payload","DispatchContext","StateContext","Store","dispatch","Provider","value","menuItems","path","name","exact","MenuLink","image","className","activeClassName","to","src","alt","MenuParent","item","menuChildren","active","setActive","key","onMouseEnter","onMouseLeave","map","child","Menu","history","useHistory","username","onClick","push","difficulty","threshold","chance","count","minAttempts","randomErrorChance","failureChance","User","password","id","length","randomError","errorMessages","Math","floor","random","LoginForm","setUsername","setPassword","errorMessage","setErrorMessage","restoreAttempts","setRestoreAttempts","position","left","top","restoreButtonStyle","setRestoreButtonStyle","handleChange","event","currentTarget","onSubmit","preventDefault","find","e","htmlFor","placeholder","onChange","autoFocus","disabled","style","maxWidth","window","innerWidth","minWidth","maxHeight","innerHeight","minHeight","a","Home","message","Secret","frameBorder","allow","allowFullScreen","title","SignupForm","usernameRef","passwordsList","shuffledList","setShuffledList","shuffleTimer","setTimeout","arr","shuffledArr","i","j","x","shuffle","clearTimeout","split","splice","join","current","mergedInputs","inputs","string","parseInputs","Array","from","isUsernameValid","isPasswordvalid","ref","elements","element","undefined","maxLength","generateInputs","Signup","App","basename","process","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2c201837.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //  logErrorToMyService(error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { User } from \"../../classes/User\";\n\ntype State = {\n  user: User | null;\n  users: User[];\n  signupAttempts: number;\n  loginAttempts: number;\n  usedNames: string[];\n  hasDroppedTable: boolean;\n  hasRestoredTable: boolean;\n  usersBackup: User[];\n};\nconst initialState: State = {\n  user: null,\n  // user: new User(\"a\", \"a\"),\n  users: [],\n  // users: [new User(\"a\", \"a\")],\n  signupAttempts: 0,\n  loginAttempts: 0,\n  usedNames: [],\n  hasDroppedTable: false,\n  // hasDroppedTable: true,\n  hasRestoredTable: false,\n  // hasRestoredTable: true,\n  usersBackup: [],\n  // usersBackup: [new User(\"a\", \"a\")],\n};\n\ntype Action =\n  | {\n      type:\n        | \"LOGOUT\"\n        | \"SIGNUP_ATTEMPT\"\n        | \"LOGIN_ATTEMPT\"\n        | \"DROP_TABLES\"\n        | \"RESTORE_BACKUP\";\n    }\n  | {\n      type: \"SIGNUP\" | \"LOGIN\";\n      payload: User;\n    }\n  | {\n      type: \"USERNAME_USED\";\n      payload: string;\n    };\n\nconst storeReducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"SIGNUP\":\n      return { ...state, users: [...state.users, action.payload] };\n    case \"LOGIN\":\n      return { ...state, user: action.payload };\n    case \"LOGOUT\":\n      return { ...state, user: null, hasRestoredTable: false };\n    case \"SIGNUP_ATTEMPT\":\n      return { ...state, signupAttempts: state.signupAttempts + 1 };\n    case \"LOGIN_ATTEMPT\":\n      return { ...state, loginAttempts: state.loginAttempts + 1 };\n    case \"USERNAME_USED\":\n      return { ...state, usedNames: [...state.usedNames, action.payload] };\n    case \"DROP_TABLES\":\n      return {\n        ...initialState,\n        signupAttempts: state.signupAttempts,\n        loginAttempts: state.loginAttempts,\n        hasDroppedTable: true,\n        usersBackup: state.users,\n      };\n    case \"RESTORE_BACKUP\":\n      return {\n        ...state,\n        hasDroppedTable: false,\n        hasRestoredTable: true,\n        users: state.usersBackup,\n        usersBackup: [],\n      };\n  }\n};\n\n// separate contexts so components that\n// only use dispatch won't re-render\ntype DispatchType = React.Dispatch<Action> | ((arg: any) => void);\nexport const DispatchContext = React.createContext<DispatchType>(() => {});\nexport const StateContext = React.createContext(initialState);\n\nexport default function Store({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <DispatchContext.Provider value={dispatch}>\n        <StateContext.Provider value={state}>{children}</StateContext.Provider>\n      </DispatchContext.Provider>\n    </>\n  );\n}\n","import { MenuItem } from \".\";\n\nexport const menuItems: MenuItem[] = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    exact: true,\n  },\n  {\n    path: \"/signup\",\n    name: \"Sign up\",\n    exact: true,\n  },\n];\n","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MenuLink = ({\n  path,\n  name,\n  exact,\n  image,\n}: {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n}) => (\n  <NavLink\n    className=\"menu-link\"\n    activeClassName=\"menu-link-active\"\n    to={path}\n    exact={exact}\n  >\n    {image ? <img src={image} alt={name} /> : name}\n  </NavLink>\n);\n","import * as React from \"react\";\nimport { MenuItem } from \".\";\nimport { MenuLink } from \"./MenuLink\";\n\nexport function MenuParent({\n  item,\n  menuChildren,\n}: {\n  item: MenuItem;\n  menuChildren?: MenuItem[];\n}) {\n  const [active, setActive] = React.useState(false);\n  const alwaysShowChildren = false;\n\n  const handleMouseEnter = () => {\n    setActive(true);\n  };\n\n  const handleMouseLeave = () => {\n    setActive(false);\n  };\n\n  return (\n    <>\n      <span\n        key={item.name}\n        className={`menu-item menu-item-${item.name}`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"menu-parent\">\n          <MenuLink\n            path={item.path}\n            name={item.name}\n            exact={item.exact}\n            image={item.image}\n          ></MenuLink>\n        </div>\n\n        {(alwaysShowChildren && menuChildren) || (active && menuChildren) ? (\n          <div className={`menu-children`}>\n            <ul>\n              {menuChildren.map((child) => {\n                return (\n                  <li\n                    key={child.path}\n                    className={`menu-child ${\n                      active ? \"menu-child-active\" : \"\"\n                    }`}\n                  >\n                    <MenuLink\n                      path={child.path}\n                      name={child.name}\n                      exact={child.exact}\n                      image={child.image}\n                    ></MenuLink>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        ) : null}\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport \"./menu.css\";\nimport { menuItems } from \"./menuItems\";\nimport { MenuParent } from \"./MenuParent\";\n\nexport type MenuItem = {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n  children?: MenuItem[];\n};\n\nexport function Menu() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n  const history = useHistory();\n\n  const handleLogout = () => {\n    dispatch({ type: \"LOGOUT\" });\n    history.push(\"/\");\n  };\n\n  return (\n    <>\n      <div className=\"menu\">\n        {menuItems.map((item) => {\n          return (\n            <MenuParent\n              key={item.path}\n              item={item}\n              menuChildren={item.children}\n            />\n          );\n        })}\n      </div>\n      {state.user ? (\n        <span className=\"logout menu-item\">\n          <header>{state.user.username}</header>\n          <button onClick={handleLogout}>Logout</button>\n        </span>\n      ) : null}\n    </>\n  );\n}\n","export const difficulty = {\n  minPasswordLength: 6,\n  minUsernameLength: 5,\n  shuffleTimer: 1000,\n  nameSplicer: {\n    threshold: 3,\n    chance: 0.3,\n    count: 2,\n  },\n  signup: {\n    minAttempts: 2,\n    randomErrorChance: 0.4,\n  },\n  login: {\n    minAttempts: 3,\n    randomErrorChance: 0.6,\n  },\n  restoreTable: {\n    minAttempts: 4,\n    failureChance: 0.7,\n  },\n};\n","import { difficulty } from \"../data/settings\";\n\nexport class User {\n  static count: number = 0;\n  id: number;\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.id = ++User.count;\n    this.username = username;\n    this.password = password;\n  }\n\n  static isPasswordvalid(password: string) {\n    return password.length >= difficulty.minPasswordLength;\n  }\n  static isUsernameValid(username: string) {\n    return username.length >= difficulty.minUsernameLength;\n  }\n}\n","import errorMessages from \"../data/errorMessages.json\";\n\nexport function randomError() {\n  return errorMessages[Math.floor(Math.random() * errorMessages.length)];\n}\n","import * as React from \"react\";\nimport { User } from \"../../classes/User\";\nimport { difficulty } from \"../../data/settings\";\nimport { randomError } from \"../../utils/randomError\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport \"./LoginForm.css\";\n\nexport function LoginForm() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [restoreAttempts, setRestoreAttempts] = React.useState(0);\n  const [restoreButtonStyle, setRestoreButtonStyle] = React.useState<\n    React.CSSProperties\n  >({\n    position: \"relative\",\n    left: 0,\n    top: 0,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMessage(\"\");\n\n    if (event.currentTarget.name === \"username\") {\n      setUsername(event.currentTarget.value);\n    } else if (event.currentTarget.name === \"password\") {\n      setPassword(event.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // normal validation\n    if (\n      !state.users.find(\n        (e) => e.username === username && e.password === password\n      )\n    ) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setErrorMessage(\"Incorrect username or password\");\n      return;\n    }\n\n    // after normal validation so player can't win on first legit attempt\n    dispatch({ type: \"LOGIN_ATTEMPT\" });\n\n    // random shenanigans\n    if (\n      state.loginAttempts < difficulty.login.minAttempts ||\n      Math.random() < difficulty.login.randomErrorChance\n    ) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setErrorMessage(randomError());\n      return;\n    }\n\n    // final obstacle\n    if (!state.hasRestoredTable) {\n      dispatch({ type: \"DROP_TABLES\" });\n      setUsername(\"\");\n      setPassword(\"\");\n      setErrorMessage(\"DROP TABLE Users\\nQuery completed.\");\n      return;\n    }\n\n    // user survived the login trials\n    dispatch({ type: \"LOGIN\", payload: new User(username, password) });\n  };\n\n  const handleRestoreButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (\n      restoreAttempts < difficulty.restoreTable.minAttempts ||\n      Math.random() < difficulty.restoreTable.failureChance\n    ) {\n      const maxWidth = window.innerWidth * 0.8;\n      const minWidth = window.innerWidth * 0.2;\n      const maxHeight = window.innerHeight * 0.8;\n      const minHeight = window.innerHeight * 0.2;\n      // console.log(\"width\", minWidth, maxWidth, \"height\", minHeight, maxHeight);\n      setRestoreButtonStyle({\n        position: \"absolute\",\n        left: Math.random() * (maxWidth - minWidth) + minWidth,\n        top: Math.random() * (maxHeight - minHeight) + minHeight,\n      });\n      setRestoreAttempts((a) => a + 1);\n    } else {\n      setErrorMessage(\"Backup restored!\");\n      dispatch({ type: \"RESTORE_BACKUP\" });\n    }\n  };\n\n  // console.log(\"login\", state, \"users\", state.users);\n\n  return (\n    <>\n      {!state.user ? (\n        <div className={state.hasRestoredTable ? \"dancing-outer\" : \"\"}>\n          <form\n            id=\"login\"\n            onSubmit={handleSubmit}\n            className={state.hasRestoredTable ? \"dancing-inner\" : \"\"}\n          >\n            <label htmlFor=\"username\">username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"username\"\n              value={username}\n              onChange={handleChange}\n              autoFocus\n              disabled={state.hasDroppedTable}\n            />\n            <label htmlFor=\"password\">password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={handleChange}\n              disabled={state.hasDroppedTable}\n            />\n            {state.hasDroppedTable ? (\n              <button\n                type=\"button\"\n                style={restoreButtonStyle}\n                onClick={handleRestoreButton}\n                // prevent users from tab selecting element and spamming space\n                // at the cost of throwing accessability out the window\n                // tabIndex={-1}\n              >\n                Restore backup\n              </button>\n            ) : (\n              <button type=\"submit\">Log in</button>\n            )}\n          </form>\n          <span className=\"wrap-fix\">{errorMessage}</span>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { StateContext } from \"../../components/Store\";\n\nexport function Home() {\n  const state = React.useContext(StateContext);\n\n  const message = state.user ? (\n    <span>You made it! Now, what could the reward be?</span>\n  ) : (\n    <span>\n      Something valuable is hidden here, <br />\n      but the system is not cooperative&hellip;\n    </span>\n  );\n\n  return (\n    <>\n      <h1>The Log In Challenge</h1>\n      <LoginForm />\n\n      {state.user ? (\n        <div id=\"reward\">\n          <NavLink to=\"/secret\">\n            <button>Continue!</button>\n          </NavLink>\n        </div>\n      ) : null}\n\n      <div className=\"static-addon-outer\">\n        <span className=\"static-addon-inner\">\n          <h4 className=\"home-message\">{message}</h4>\n        </span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { StateContext } from \"../../components/Store\";\nimport \"./Secret.css\";\n\nexport function Secret() {\n  const state = React.useContext(StateContext);\n\n  if (!state.user) {\n    return (\n      <>\n        <div>\n          <h1>You are not supposed to be here&hellip;</h1>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"secret-greetings\">\n        <h3>Congratulations!</h3>\n        <p>\n          You tried {state.signupAttempts} times to sign up and{\" \"}\n          {state.loginAttempts} times to log in\n        </p>\n      </div>\n      <div className=\"video-wrapper\">\n        <div className=\"youtube-embed\">\n          <iframe\n            src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            title=\"Rickroll\"\n          ></iframe>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"../../classes/User\";\nimport { DispatchContext, StateContext } from \"../../components/Store\";\nimport passwordsList from \"../../data/passwords.json\";\nimport { difficulty } from \"../../data/settings\";\nimport { randomError } from \"../../utils/randomError\";\nimport { shuffle } from \"../../utils/shuffle\";\nimport \"./SignupForm.css\";\n\nexport function SignupForm() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n  const history = useHistory();\n\n  const usernameRef = React.useRef<HTMLDivElement>(null);\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const [shuffledList, setShuffledList] = React.useState(passwordsList);\n\n  // shuffles the password list even while the select is open\n  // seems to \"just work\" as hoped in both firefox and chrome\n  React.useEffect(() => {\n    const shuffleTimer = setTimeout(() => {\n      setShuffledList(shuffle(passwordsList));\n    }, difficulty.shuffleTimer);\n    return () => {\n      clearTimeout(shuffleTimer);\n    };\n  }, [shuffledList]);\n\n  // sometimes remove a few characters from the username\n  // can/should adjust values\n  React.useEffect(() => {\n    if (\n      username.length > difficulty.nameSplicer.threshold &&\n      Math.random() < difficulty.nameSplicer.chance\n    ) {\n      let arr = username.split(\"\");\n      for (let i = 0; i < difficulty.nameSplicer.count; ++i) {\n        arr.splice(Math.floor(Math.random() * arr.length), 1);\n      }\n      setUsername(arr.join(\"\"));\n    }\n  }, [username]);\n\n  // hack needed to clear value from first input\n  // after username is set to \"\" by setUsername\n  // possible cause: react reusing same element\n  // this is best fix for now\n  // alternative: leave the bug in place as a feature to annoy players\n  React.useEffect(() => {\n    if (usernameRef.current && username.length === 0) {\n      // couldn't find another way to tell TS the type of the child\n      (usernameRef.current.children[0] as HTMLInputElement).value = \"\";\n    }\n  }, [username]);\n\n  const generateInputs = (count: number): JSX.Element[] => {\n    const elements = [];\n    for (let i = 0; i < count; i++) {\n      let element = (\n        <input\n          key={i}\n          className={username.length >= 1 ? \"generated-input\" : undefined}\n          type=\"text\"\n          name=\"username\"\n          placeholder={username.length < 1 ? \"username\" : undefined}\n          onChange={handleChange}\n          // could leave autoFocus off to be annoying\n          // autoFocus={i === count - 1}\n          // either autofocus on and maxlength off or the opposite\n          // if autofocus and maxlength are both off player can ignore new inputs\n          // if both are enabled, user can also ignore the new inputs and keep typing\n          maxLength={1}\n        />\n      );\n      elements.push(element);\n    }\n    return elements;\n  };\n\n  const parseInputs = (inputs: Array<HTMLInputElement>): string => {\n    let string = \"\";\n    for (let child of inputs) {\n      string += child.value;\n    }\n    return string;\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    setErrorMessage(\"\");\n\n    if (event.currentTarget.name === \"username\") {\n      let mergedInputs = parseInputs(\n        Array.from<any>(usernameRef.current!.children)\n      );\n      setUsername(mergedInputs);\n      if (!User.isUsernameValid(mergedInputs)) {\n        setErrorMessage(\"username is too short\");\n      }\n    } else if (event.currentTarget.name === \"password\") {\n      setPassword(event.currentTarget.value);\n      if (!User.isPasswordvalid(event.currentTarget.value)) {\n        setErrorMessage(\"password is too short\");\n      }\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // normal validation\n    if (!User.isUsernameValid(username) || !User.isPasswordvalid(password)) {\n      setErrorMessage(\"username or password invalid\");\n      return;\n    }\n    if (\n      state.users.find((e) => e.username === username) ||\n      state.usedNames.find((e) => e === username)\n    ) {\n      setErrorMessage(\"username taken\");\n      return;\n    }\n\n    // after normal validation so player can't win on first legit attempt\n    dispatch({ type: \"SIGNUP_ATTEMPT\" });\n\n    // ensure same name can't be spammed until it works\n    dispatch({ type: \"USERNAME_USED\", payload: username });\n\n    // random shenanigans\n    if (\n      state.signupAttempts < difficulty.signup.minAttempts ||\n      Math.random() < difficulty.signup.randomErrorChance\n    ) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setErrorMessage(randomError());\n      return;\n    }\n\n    // user survived the signup trials\n    dispatch({ type: \"SIGNUP\", payload: new User(username, password) });\n    history.push(\"/\");\n  };\n\n  // console.log(\"signup\", state, \"users\", state.users);\n\n  return (\n    <>\n      <form id=\"signup\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">username</label>\n        <div className=\"signup-username\" ref={usernameRef}>\n          {generateInputs(username.length + 1)}\n        </div>\n        <label htmlFor=\"password\">password</label>\n        <select\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={handleChange}\n        >\n          <option value=\"\"></option>\n          {shuffledList.map((e) => (\n            <option key={e} value={e}>\n              {e}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Sign up</button>\n      </form>\n      <div className=\"static-addon-outer\">\n        <span className=\"static-addon-inner\">{errorMessage}</span>\n      </div>\n    </>\n  );\n}\n","/**\n * Fisher-Yates shuffle.\n * Shuffles a shallow clone of the array.\n * @export\n * @template T\n * @param {T[]} arr The array to be shuffled\n * @returns {T[]} A shuffled shallow clone of the array\n */\nexport function shuffle<T>(arr: T[]): T[] {\n  const shuffledArr = [...arr];\n  for (let i = shuffledArr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const x = shuffledArr[i];\n    shuffledArr[i] = shuffledArr[j];\n    shuffledArr[j] = x;\n  }\n  return shuffledArr;\n}\n","import * as React from \"react\";\nimport { SignupForm } from \"../../components/SignupForm\";\n\nexport function Signup() {\n  return (\n    <>\n      <h2>Sign up</h2>\n      <SignupForm />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport { Menu } from \"./components/Menu\";\nimport Store from \"./components/Store\";\nimport { Home } from \"./routes/Home\";\nimport { Secret } from \"./routes/Secret\";\nimport { Signup } from \"./routes/Signup\";\n\nfunction App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Store>\n          <Router basename={process.env.PUBLIC_URL}>\n            <nav>\n              <Menu />\n            </nav>\n            <main>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/signup\">\n                  <Signup />\n                </Route>\n                <Route path=\"/secret\">\n                  <Secret />\n                </Route>\n              </Switch>\n            </main>\n          </Router>\n        </Store>\n      </ErrorBoundary>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}