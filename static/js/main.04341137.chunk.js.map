{"version":3,"sources":["components/ErrorBoundary.jsx","components/Store/index.tsx","components/Menu/menuItems.ts","components/Menu/MenuLink.tsx","components/Menu/MenuParent.tsx","components/Menu/index.tsx","classes/User.ts","utils/utils.ts","components/LoginForm/index.tsx","routes/Home/index.tsx","routes/Secret/index.tsx","components/SignupForm/index.tsx","routes/Signup/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","children","React","initialState","user","users","storeReducer","action","type","payload","DispatchContext","StateContext","Store","dispatch","Provider","value","menuItems","path","name","exact","MenuLink","image","className","activeClassName","to","src","alt","MenuParent","item","menuChildren","active","setActive","key","onMouseEnter","onMouseLeave","map","child","Menu","history","useHistory","username","onClick","push","User","password","id","count","length","randomError","errors","Math","floor","random","LoginForm","setUsername","setPassword","errorMessage","setErrorMessage","attempts","setAttempts","handleChange","event","currentTarget","onSubmit","preventDefault","find","e","a","htmlFor","placeholder","onChange","Home","message","Secret","frameBorder","allow","allowFullScreen","title","SignupForm","isUsernameValid","isPasswordvalid","autoFocus","passwordsList","Signup","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.04341137.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //  logErrorToMyService(error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { User } from \"../../classes/User\";\n\ntype State = {\n  user: User | null;\n  users: User[];\n};\nconst initialState: State = {\n  user: null,\n  // user: new User(\"a\", \"a\"),\n  users: [],\n};\n\ntype Action =\n  | {\n      type: \"DROP_TABLES\" | \"LOGOUT\";\n    }\n  | {\n      type: \"SIGNUP\" | \"LOGIN\";\n      payload: User;\n    };\n\nconst storeReducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"DROP_TABLES\":\n      return initialState;\n    case \"SIGNUP\":\n      return { ...state, users: [...state.users, action.payload] };\n    case \"LOGIN\":\n      return { ...state, user: action.payload };\n    case \"LOGOUT\":\n      return { ...state, user: null };\n  }\n};\n\n// separate contexts so components that\n// only use dispatch won't re-render\ntype DispatchType = React.Dispatch<Action> | ((arg: any) => void);\nexport const DispatchContext = React.createContext<DispatchType>(() => {});\nexport const StateContext = React.createContext(initialState);\n\ntype Props = { children: React.ReactNode };\n\nexport default function Store(props: Props) {\n  const [state, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <DispatchContext.Provider value={dispatch}>\n        <StateContext.Provider value={state}>\n          {props.children}\n        </StateContext.Provider>\n      </DispatchContext.Provider>\n    </>\n  );\n}\n","import { MenuItem } from \".\";\n\nexport const menuItems: MenuItem[] = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    exact: true,\n  },\n  {\n    path: \"/signup\",\n    name: \"Sign up\",\n    exact: true,\n  },\n];\n","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MenuLink = ({\n  path,\n  name,\n  exact,\n  image,\n}: {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n}) => (\n  <NavLink\n    className=\"menu-link\"\n    activeClassName=\"menu-link-active\"\n    to={path}\n    exact={exact}\n  >\n    {image ? <img src={image} alt={name} /> : name}\n  </NavLink>\n);\n","import * as React from \"react\";\nimport { MenuItem } from \".\";\nimport { MenuLink } from \"./MenuLink\";\n\nexport function MenuParent({\n  item,\n  menuChildren,\n}: {\n  item: MenuItem;\n  menuChildren?: MenuItem[];\n}) {\n  const [active, setActive] = React.useState(false);\n  const alwaysShowChildren = false;\n\n  const handleMouseEnter = () => {\n    setActive(true);\n  };\n\n  const handleMouseLeave = () => {\n    setActive(false);\n  };\n\n  return (\n    <>\n      <span\n        key={item.name}\n        className={`menu-item menu-item-${item.name}`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"menu-parent\">\n          <MenuLink\n            path={item.path}\n            name={item.name}\n            exact={item.exact}\n            image={item.image}\n          ></MenuLink>\n        </div>\n\n        {(alwaysShowChildren && menuChildren) || (active && menuChildren) ? (\n          <div className={`menu-children`}>\n            <ul>\n              {menuChildren.map((child) => {\n                return (\n                  <li\n                    key={child.path}\n                    className={`menu-child ${\n                      active ? \"menu-child-active\" : \"\"\n                    }`}\n                  >\n                    <MenuLink\n                      path={child.path}\n                      name={child.name}\n                      exact={child.exact}\n                      image={child.image}\n                    ></MenuLink>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        ) : null}\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport \"./menu.css\";\nimport { menuItems } from \"./menuItems\";\nimport { MenuParent } from \"./MenuParent\";\n\nexport type MenuItem = {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n  children?: MenuItem[];\n};\n\nexport function Menu() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n  const history = useHistory();\n\n  const handleLogout = () => {\n    dispatch({ type: \"LOGOUT\" });\n    history.push(\"/\");\n  };\n\n  return (\n    <>\n      <div className=\"menu\">\n        {menuItems.map((item) => {\n          return (\n            <MenuParent\n              key={item.path}\n              item={item}\n              menuChildren={item.children}\n            />\n          );\n        })}\n      </div>\n      {state.user ? (\n        <span className=\"logout menu-item\">\n          <header>{state.user.username}</header>\n          <button onClick={handleLogout}>Logout</button>\n        </span>\n      ) : null}\n    </>\n  );\n}\n","export class User {\n  static count: number = 0;\n  id: number;\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.id = ++User.count;\n    this.username = username;\n    this.password = password;\n  }\n\n  static isPasswordvalid(password: string) {\n    return password.length >= 3;\n  }\n  static isUsernameValid(username: string) {\n    return username.length >= 3;\n  }\n}\n","export function randomError() {\n  const errors = [\n    \"The goose got loose\",\n    \"Hackers are in the mainframe\",\n    \"The system is busy\",\n    \"Rebels are infiltrating the Death Star\",\n    \"There was an unknown error\",\n    \"Try again\",\n    \"Low system power\",\n    \"Ph'nglui mglw'nafh Cthulhu R'lyeh wgah'nagl fhtagn\",\n  ];\n\n  return errors[Math.floor(Math.random() * errors.length)];\n}\n","import * as React from \"react\";\nimport { User } from \"../../classes/User\";\nimport { randomError } from \"../../utils/utils\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport \"./LoginForm.css\";\n\nexport function LoginForm() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [attempts, setAttempts] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMessage(\"\");\n\n    if (event.currentTarget.name === \"username\") {\n      setUsername(event.currentTarget.value);\n    } else if (event.currentTarget.name === \"password\") {\n      setPassword(event.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // normal validation\n    if (\n      !state.users.find(\n        (e) => e.username === username && e.password === password\n      )\n    ) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setErrorMessage(\"Incorrect username or password\");\n      return;\n    }\n\n    // random shenanigans\n    // TODO: decide if easier or harder than signup\n    if (!attempts || Math.random() < 0.7) {\n      setErrorMessage(randomError());\n      setUsername(\"\");\n      setPassword(\"\");\n      setAttempts((a) => a + 1);\n      return;\n    }\n\n    // TODO: add new shenanigans\n\n    // user survived the login trials\n    dispatch({ type: \"LOGIN\", payload: new User(username, password) });\n  };\n\n  // console.log(\"login\", state, \"users\", state.users);\n\n  return (\n    <>\n      <form id=\"login\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          placeholder=\"username\"\n          value={username}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Log in</button>\n        <div>{errorMessage}</div>\n      </form>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { StateContext } from \"../../components/Store\";\n\nexport function Home() {\n  const state = React.useContext(StateContext);\n\n  const message = state.user ? (\n    <span>You made it! Now, what could the reward be?</span>\n  ) : (\n    <span>\n      Something valuable is hidden here, <br />\n      but the system is not cooperative&hellip;\n    </span>\n  );\n\n  return (\n    <>\n      <h1>The Log In Challenge</h1>\n      <LoginForm />\n      <h4 className=\"home-message\">{message}</h4>\n      {state.user ? (\n        <div id=\"reward\">\n          <NavLink to=\"/secret\">\n            <button>Continue!</button>\n          </NavLink>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { StateContext } from \"../../components/Store\";\nimport \"./Secret.css\";\n\nexport function Secret() {\n  const state = React.useContext(StateContext);\n\n  if (!state.user) {\n    return (\n      <>\n        <div>\n          <h1>You are not supposed to be here&hellip;</h1>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"video-wrapper\">\n        <div className=\"youtube-embed\">\n          <iframe\n            src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            title=\"Rickroll\"\n          ></iframe>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"../../classes/User\";\nimport { DispatchContext, StateContext } from \"../../components/Store\";\nimport passwordsList from \"../../data/passwords.json\";\nimport { randomError } from \"../../utils/utils\";\nimport \"./SignupForm.css\";\n\nexport function SignupForm() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n  const history = useHistory();\n\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [attempts, setAttempts] = React.useState(0);\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    setErrorMessage(\"\");\n\n    if (event.currentTarget.name === \"username\") {\n      if (!User.isUsernameValid(event.currentTarget.value)) {\n        setErrorMessage(\"username is too short\");\n      }\n\n      setUsername(event.currentTarget.value);\n    } else if (event.currentTarget.name === \"password\") {\n      if (!User.isPasswordvalid(event.currentTarget.value)) {\n        setErrorMessage(\"password is too short\");\n      }\n      setPassword(event.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // normal validation\n    if (!User.isUsernameValid(username) || !User.isPasswordvalid(password)) {\n      setErrorMessage(\"username or password invalid\");\n      return;\n    }\n    if (state.users.find((e) => e.username === username)) {\n      setErrorMessage(\"username taken\");\n      return;\n    }\n\n    // random shenanigans\n    if (!attempts || Math.random() < 0.3) {\n      setErrorMessage(randomError());\n      setUsername(\"\");\n      setPassword(\"\");\n      setAttempts((a) => a + 1);\n      return;\n    }\n\n    // TODO: add new shenanigans\n\n    // user survived the signup trials\n    dispatch({ type: \"SIGNUP\", payload: new User(username, password) });\n    history.push(\"/\");\n  };\n\n  // console.log(\"signup\", state, \"users\", state.users);\n\n  return (\n    <>\n      <form id=\"signup\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">username</label>\n        <div className=\"signup-username\">\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={handleChange}\n            autoFocus\n          />\n        </div>\n        <label htmlFor=\"password\">password</label>\n        <select\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={handleChange}\n        >\n          <option value=\"\"></option>\n          {passwordsList.map((e) => (\n            <option key={e} value={e}>\n              {e}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Signup</button>\n        <div>{errorMessage}</div>\n      </form>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { SignupForm } from \"../../components/SignupForm\";\n\nexport function Signup() {\n  return (\n    <>\n      <h2>Sign up</h2>\n      <SignupForm />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport { Menu } from \"./components/Menu\";\nimport Store from \"./components/Store\";\nimport { Home } from \"./routes/Home\";\nimport { Secret } from \"./routes/Secret\";\nimport { Signup } from \"./routes/Signup\";\n\nfunction App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Store>\n          <Router basename={process.env.PUBLIC_URL}>\n            <nav>\n              <Menu />\n            </nav>\n            <main>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/signup\">\n                  <Signup />\n                </Route>\n                <Route path=\"/secret\">\n                  <Secret />\n                </Route>\n              </Switch>\n            </main>\n          </Router>\n        </Store>\n      </ErrorBoundary>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}